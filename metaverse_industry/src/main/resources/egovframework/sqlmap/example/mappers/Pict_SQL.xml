<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pict_admin.service.impl.PictMapper">

	<select id="get_url_settings" resultType="map">
		select * from url_table where idx = 1
	</select>
	
	<update id="update_url_settings" parameterType="pictVO">
	  UPDATE url_table
	  SET 
	    content_url = #{content_url},
	    professional_url = #{professional_url},
	    infra_url = #{infra_url},
	    video_url = #{video_url}
	    <if test="video_thumb != null and video_thumb != ''">
	    , video_thumb = #{video_thumb}
	    </if>
	  WHERE idx = 1
	</update>
	
	
	<select id="get_popup_list" resultType="map">
		select * from popup_table
		where 1=1
		<if test="idx != null and idx != 0">
			and idx = #{idx}
		</if>
		<if test="order_by != null and order_by == 'true'">
			order by order_by asc
		</if>
	</select>
	
	<select id="popup_list_one" resultType="pictVO">
		select idx, title, link_url, image_url, order_by as order_val from popup_table
		where idx = #{idx}
	</select>
	
	<insert id="popup_insert" parameterType="pictVO">
		INSERT INTO popup_table
			(
			 title, link_url,image_url, order_by
			)
		VALUES (
			 #{title}, #{link_url}, #{image_url}, #{order_val}
			  ) 
	</insert>
	
	<update id="popup_update" parameterType="pictVO">
	  UPDATE popup_table
	  SET 
	    title = #{title}
	    <if test="file_url1 != null and file_url1 != ''">
	      , file_url1 = #{file_url1}
	    </if>
	    <if test="link_url != null and link_url != ''">
	      , link_url = #{link_url}
	    </if>
	    <if test="order_val != null and order_val != 0">
	      , order_by = #{order_val}
	    </if>
	  WHERE idx = #{idx}
	</update>
	
	<delete id="popup_delete" parameterType="pictVO">
		delete from popup_table where idx = #{idx}
	</delete>
	
	<select id="get_popup_total_cnt" resultType="int">
		select count(*) as totalCnt from popup_table
	</select>
	
	
	<select id="get_user_list" resultType="map">
		select * from user_table
		
		where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				id LIKE CONCAT('%', #{search_text}, '%') or
				name LIKE CONCAT('%', #{search_text}, '%') or
				mobile LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		order by reg_date desc
		<if test="limit_cnt != null and limit_cnt != 0">
			limit #{limit_cnt} OFFSET #{startNumber}
		</if>
	</select>
	
	<delete id="delete_user" parameterType="int">
		delete from user_table where idx = #{idx}
	</delete>


	<select id="board_list" resultType="pictVO">
		select idx, title, category, text, date_format(reg_date, '%Y-%m-%d') as reg_date, file_url1, file_url2, file_url3 from board_table
		
		<where>
	        <if test="search_text != null and search_text != ''">
	            and title LIKE CONCAT('%', #{search_text}, '%')
	        </if>
	        <choose>
	            <when test="type != null and type != ''">
	                and category = #{type}
	            </when>
	            <otherwise>
	                and category != '5'
	            </otherwise>
	        </choose>
	    </where>
		order by reg_date desc
		<if test="limit_cnt != null and limit_cnt != 0">
			limit #{limit_cnt} OFFSET #{startNumber}
		</if>
	</select>
	
	<select id="board_list_total_cnt" resultType="int">
		select count(*) as totalCnt from board_table
		<if test="type != null and type != '' ">
			where category = #{type}
		</if>
	</select>
	
	<select id="board_list_one" resultType="pictVO">
		select idx, title, category, text, date_format(reg_date, '%Y-%m-%d') as reg_date, file_url1, file_url2, file_url3 from board_table
		where idx = #{idx}
	</select>

	
	<insert id="board_insert" parameterType="pictVO">
		INSERT INTO board_table
			(
			 title, category,reg_date, use_at, text, file_url1, file_url2, file_url3
			)
		VALUES (
			 #{title}, #{category} ,now(), 'Y', #{text}, #{file_url1}, #{file_url2}, #{file_url3}
			  ) 
	</insert>
	
	<update id="board_update" parameterType="pictVO">
	  UPDATE board_table
	  SET 
	  	category = #{category},
	    title = #{title},
	    text = #{text}, 
	    reg_date = NOW()
	    <if test="file_url1 != null and file_url1 != ''">
	      , file_url1 = #{file_url1}
	    </if>
	    <if test="file_url2 != null and file_url2 != ''">
	      , file_url2 = #{file_url2}
	    </if>
	    <if test="file_url3 != null and file_url3 != ''">
	      , file_url3 = #{file_url3}
	    </if>
	  WHERE idx = #{idx}
	</update>
	

	<delete id="board_delete" parameterType="pictVO">
		delete from board_table where idx = #{idx}
	</delete>
	
	<update id="board_file_delete" parameterType="pictVO">
		update board_master
		set img_url=NULL
		where idx = #{idx}
	</update>
	
	<!-- 사업공고 관리 -->
	<select id="biz_list" resultType="pictVO">
		select idx, title, category, text, date_format(reg_date, '%Y-%m-%d') as reg_date, file_url1, file_url2, file_url3 from board_table
		
		<where>
			category = '5'
	        <if test="search_text != null and search_text != ''">
	            and title LIKE CONCAT('%', #{search_text}, '%')
	        </if>
	    </where>
		order by reg_date desc
		<if test="limit_cnt != null and limit_cnt != 0">
			limit #{limit_cnt} OFFSET #{startNumber}
		</if>
	</select>
	
	<select id="biz_list_total_cnt" resultType="int">
		select count(*) as totalCnt from board_table where category = '5'
	</select>
	
	<select id="biz_list_one" resultType="pictVO">
		select idx, title, category, text, date_format(reg_date, '%Y-%m-%d') as reg_date, file_url1, file_url2, file_url3 from board_table
		where idx = #{idx}
	</select>

	
	<insert id="biz_insert" parameterType="pictVO">
		INSERT INTO board_table
			(
			 title, category, reg_date, use_at, text, file_url1, file_url2, file_url3
			)
		VALUES (
			 #{title}, '5' ,now(), 'Y', #{text}, #{file_url1}, #{file_url2}, #{file_url3}
			  ) 
	</insert>
	
	<update id="biz_update" parameterType="pictVO">
	  UPDATE board_table
	  SET 
	  	category = #{category},
	    title = #{title},
	    text = #{text}, 
	    reg_date = NOW()
	    <if test="file_url1 != null and file_url1 != ''">
	      , file_url1 = #{file_url1}
	    </if>
	    <if test="file_url2 != null and file_url2 != ''">
	      , file_url2 = #{file_url2}
	    </if>
	    <if test="file_url3 != null and file_url3 != ''">
	      , file_url3 = #{file_url3}
	    </if>
	  WHERE idx = #{idx}
	</update>
	

	<delete id="biz_delete" parameterType="pictVO">
		delete from board_table where idx = #{idx}
	</delete>
	
	<update id="biz_file_delete" parameterType="pictVO">
		update board_master
		set img_url=NULL
		where idx = #{idx}
	</update>
	
	<!-- 장비관리  -->
	<!-- <select id="equipment_list" resultType="pictVO">
	    SELECT * FROM (
	        SELECT 
	            et.idx,
	            et.id,
	            et.type,
	            et.name,
	            et.description,
	            et.image_url,
	            et.bujajae,
	            date_format(et.reg_date, '%Y-%m-%d') as reg_date,
	            et.use_ny,
	            COALESCE(avail_count.cnt, 0) AS avaliable_equipment_cnt,
	            CASE 
	                WHEN (bt.key_id IS NOT NULL AND bt.user_id = #{user_id}) THEN '1'
	                ELSE '0'
	            END AS isLike
	        FROM 
	            equipment_type_table et
	        LEFT JOIN (
	            SELECT 
	                equipment_type_id,
	                COUNT(*) AS cnt
	            FROM 
	                equipment_item_table
	            WHERE 
	                status = 'available'
	            GROUP BY 
	                equipment_type_id
	        ) avail_count ON et.id = avail_count.equipment_type_id
	        LEFT JOIN bag_table bt ON et.id = bt.key_id 
	            <if test="user_id != null and user_id != ''">
	                AND bt.user_id = #{user_id}
	            </if>
	    ) AS subquery
	    <where>
	        use_ny = 'Y'
	        <if test="isOnlyAvailable != null and isOnlyAvailable">
	            AND avaliable_equipment_cnt > 0
	        </if>
	        <if test="search_text != null and search_text != ''">
	            AND name LIKE CONCAT('%', #{search_text}, '%')
	        </if>
	        <if test="type != null and type != ''">
	            AND type LIKE CONCAT('%', #{type}, '%')
	        </if>
	    </where>
	    ORDER BY reg_date DESC
	    <if test="limit_cnt != null and limit_cnt != 0">
	        LIMIT #{limit_cnt} OFFSET #{startNumber}
	    </if>
	</select> -->
	
	<select id="equipment_list" resultType="pictVO">
	    SELECT * FROM (
	        SELECT 
	            et.idx,
	            et.id,
	            et.type,
	            et.name,
	            et.description,
	            et.image_url,
	            et.bujajae,
	            date_format(et.reg_date, '%Y-%m-%d') as reg_date,
	            et.use_ny,
	            COALESCE(avail_count.cnt, 0) AS avaliable_equipment_cnt,
	            COALESCE(inventory_count.inventoryCnt, 0) AS inventoryCnt,
	            CASE 
	                WHEN (bt.key_id IS NOT NULL AND bt.user_id = #{user_id}) THEN '1'
	                ELSE '0'
	            END AS isLike
	        FROM 
	            equipment_type_table et
	        LEFT JOIN (
	            SELECT 
	                equipment_type_id,
	                COUNT(*) AS cnt
	            FROM 
	                equipment_item_table
	            WHERE 
	                status = 'available'
	            GROUP BY 
	                equipment_type_id
	        ) avail_count ON et.id = avail_count.equipment_type_id
	        LEFT JOIN (
	            SELECT 
	                ei.equipment_type_id,
	                COUNT(*) AS inventoryCnt
	            FROM 
	                equipment_item_table ei
	            LEFT JOIN equipment_rental_request err ON ei.id = err.equipment_id 
	                AND err.request_status = 'rental'
	                AND CURDATE() BETWEEN err.rental_start_date AND err.rental_end_date
	            WHERE 
	                ei.status = 'available'
	                AND err.id IS NULL
	            GROUP BY 
	                ei.equipment_type_id
	        ) inventory_count ON et.id = inventory_count.equipment_type_id
	        LEFT JOIN bag_table bt ON et.id = bt.key_id 
	            <if test="user_id != null and user_id != ''">
	                AND bt.user_id = #{user_id}
	            </if>
	    ) AS subquery
	    <where>
	        use_ny = 'Y'
	        <if test="isOnlyAvailable != null and isOnlyAvailable">
	            AND avaliable_equipment_cnt > 0
	        </if>
	        <if test="search_text != null and search_text != ''">
	            AND name LIKE CONCAT('%', #{search_text}, '%')
	        </if>
	        <if test="type != null and type != ''">
	            AND type LIKE CONCAT('%', #{type}, '%')
	        </if>
	    </where>
	    ORDER BY reg_date DESC
	    <if test="limit_cnt != null and limit_cnt != 0">
	        LIMIT #{limit_cnt} OFFSET #{startNumber}
	    </if>
	</select>
	<select id="equipment_list_total_cnt" resultType="int">
			select count(*) as totalCnt from equipment_type_table where use_ny = "Y"
			<if test="type != null and type != ''">
	            AND type LIKE CONCAT('%', #{type}, '%')
	        </if>
	</select>
	
	<select id="equipment_item_list" resultType="map">
	    SELECT 
	    ei.idx,
	    ei.id,
	    ei.equipment_type_id,
	    ei.serial_number,
	    ei.status,
	    date_format(reg_date, '%Y-%m-%d') as reg_date
	     FROM equipment_item_table as ei
        <where>
	        <if test="equipment_id != null and equipment_id != ''">
	            equipment_type_id = #{equipment_id}
	        </if>
	        <if test="isAll != true">
	            AND status = 'available'
	        </if>
	    </where>
	</select>
	
	
	
	
	<select id="equipment_unavailable_date_list" resultType="map">
		<![CDATA[
		WITH RECURSIVE
		date_range AS (
		    SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY) AS date
		    UNION ALL
		    SELECT date + INTERVAL 1 DAY
		    FROM date_range
		    WHERE date < LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
		),
		equipment_availability AS (
		    SELECT 
		        dr.date,
		        et.id AS equipment_type_id,
		        COUNT(ei.id) AS total_count,
		        SUM(CASE WHEN ei.status = 'available' THEN 1 ELSE 0 END) -
		        COALESCE(SUM(CASE 
		            WHEN r.request_status IN ('approved', 'pendding') 
		            AND dr.date BETWEEN r.rental_start_date AND r.rental_end_date 
		            THEN 1 ELSE 0 END), 0) AS available_count
		    FROM date_range dr
		    CROSS JOIN equipment_type_table et
		    JOIN equipment_item_table ei ON et.id = ei.equipment_type_id
		    LEFT JOIN equipment_rental_request r ON ei.id = r.equipment_id
		    WHERE et.id = #{id}
		    GROUP BY dr.date, et.id
		)
		SELECT 
		    DATE_FORMAT(date, '%Y-%m-%d') AS unavailable_date
		FROM equipment_availability
		WHERE available_count = 0
		ORDER BY date
		]]>
	</select>
	
	
	<select id="equipment_list_one" resultType="pictVO">
		select idx, id, type as category, name, description, image_url, bujajae, date_format(reg_date, '%Y-%m-%d') as reg_date from equipment_type_table
        <where>
	        <if test="idx != 0 and id == null">
	            idx = #{idx}
	        </if>
	        <if test="idx == 0 and id != null and id != ''">
	            id = #{id}
	        </if>
	    </where>
	</select>
	
	<select id="get_overdue_list" resultType="map">
		SELECT 
		    err.id AS rental_request_id,
		    DATE_FORMAT(err.rental_start_date, '%Y-%m-%d') AS rental_start_date,
		    DATE_FORMAT(err.rental_end_date, '%Y-%m-%d') AS rental_end_date,
		    DATEDIFF(CURRENT_DATE, err.rental_end_date) AS overdue_days,
		    DATE_FORMAT(err.request_date, '%Y-%m-%d %H:%i') AS request_date,
		    DATE_FORMAT(err.last_updated, '%Y-%m-%d %H:%i') AS last_updated,
		    
		    ut.name AS user_name,
		    ut.mobile AS user_mobile,
		    ut.email AS user_email,
		    ut.company_nm AS user_company,
		    ut.position AS user_position,
		    ut.sa_eob_no AS user_business_number,
		    ut.company_address1 AS user_company_address1,
		    ut.company_address2 AS user_company_address2,
		    
		    ei.id AS equipment_item_id,
		    ei.serial_number,
		    et.name AS equipment_name,
		    et.type AS equipment_type,
		    et.description AS equipment_description,
		    
		    err.company_nm AS rental_company_name,
		    err.position AS rental_position,
		    err.sa_eob_no AS rental_business_number,
		    err.company_address1 AS rental_company_address1,
		    err.company_address2 AS rental_company_address2,
		    err.equipment_plan,
		    err.file_path
		FROM 
		    equipment_rental_request err
		    JOIN user_table ut ON err.user_id = ut.user_id
		    JOIN equipment_item_table ei ON err.equipment_id = ei.id
		    JOIN equipment_type_table et ON ei.equipment_type_id = et.id
		WHERE 
		    err.request_status = 'overdue'
		ORDER BY 
		    err.rental_end_date ASC,
		    overdue_days DESC;
	</select>
	
	<insert id="equipment_insert" parameterType="pictVO">
		INSERT INTO equipment_type_table
			(id, type, name, description, image_url, bujajae)
		VALUES (
			 UUID(), #{category} ,#{name}, #{description}, #{image_url}, #{bujajae}
			  )
	</insert>
	
	<update id="equipment_update" parameterType="pictVO">
	  UPDATE equipment_type_table
	  SET 
	  	type = #{category},
	    name = #{name},
	    description = #{description},
	    bujajae = #{bujajae},
	    reg_date = NOW()
	    <if test="image_url != null and image_url != ''">
	      , image_url = #{image_url}
	    </if>
	  WHERE idx = #{idx}
	</update>
	
	<select id="get_user_by_request" resultType="map">
		select ut.mobile, ut.name, ut.email from equipment_rental_request err left join user_table ut on ut.user_id = err.user_id where err.idx = #{idx};
	</select>
	<!-- 장비 삭제 -->
	<update id="equipment_delete" parameterType="int">
	  UPDATE equipment_type_table
	  SET 
	    use_ny = "N"
	  WHERE idx = #{idx}
	</update>
	
	<!--  시리얼 넘버 생성  -->
	<insert id="equipment_cnt_insert" parameterType="pictVO">
		INSERT INTO equipment_item_table
			(equipment_type_id, id, serial_number, image_url, text, reg_date)
		VALUES (
			 #{equipment_id} , UUID(), #{serial_number}, #{image_url}, #{text}, #{reg_date}
			  )
	</insert>
	
	
	<select id="equipment_item_one" resultType="pictVO">
		select 
			idx,
			id,
			equipment_type_id,
			serial_number,
			status,
			date_format(reg_date, '%Y-%m-%d') as reg_date,
			image_url,
			text
		from equipment_item_table
			
		where idx = #{idx}
	</select>
	
	<update id="equipment_cnt_update" parameterType="pictVO">
	    UPDATE equipment_item_table
	    <set>
	        <if test="serial_number != null">
	            serial_number = #{serial_number},
	        </if>
	        <if test="text != null">
	            text = #{text},
	        </if>
	        <if test="reg_date != null">
	            reg_date = #{reg_date},
	        </if>
	        <if test="status != null">
	            status = #{status}
	        </if>
	    </set>
	    WHERE idx = #{idx}
	</update>
	
	<delete id="equipment_cnt_delete" parameterType="int">
		delete from equipment_item_table where idx = #{idx}
	</delete>
	
	<insert id="submit_rental_request" parameterType="pictVO">
		INSERT INTO equipment_rental_request
			(id, equipment_id, user_id, rental_start_date, rental_end_date, type, equipment_plan, sa_eob_no, company_nm, position, company_address1, company_address2, file_path)
		VALUES (
			 UUID(), #{id}, #{user_id} , #{rental_start_date}, #{rental_end_date}, #{type}, #{equipment_plan}, #{sa_eob_no}, #{company_nm}, #{position}, #{company_address1}, #{company_address2}, #{file_url1} 
			  )
	</insert>
	
	<update id="update_equipment_item" parameterType="pictVO">
		update equipment_item_table
		set status = 'applied'
		where id = '${id}'
	</update>
	
	<select id="get_request_list" resultType="map">
		SELECT 
		    err.idx,
		    err.id,
		    err.equipment_id,
		    err.user_id,
		    err.rental_start_date,
		    err.rental_end_date,
		    err.request_status,
		    date_format(err.request_date, '%Y-%m-%d') as request_date,
		    err.type,
		    err.equipment_plan,
		    err.sa_eob_no,
		    err.company_nm,
		    err.position,
		    err.company_address1,
		    err.company_address2,
		    err.file_path,
		    et.name,
		    et.type AS equipment_type,
		    ut.name AS user_name
		FROM 
		    equipment_rental_request err
		JOIN 
		    equipment_item_table eit ON err.equipment_id = eit.id
		JOIN 
		    equipment_type_table et ON eit.equipment_type_id = et.id
		JOIN 
		    user_table ut ON ut.user_id = err.user_id
		<where>
			<if test="idx != null and idx != 0">
				and err.idx = #{idx}
				
			</if>
			<if test="category != null and category != ''">
				and et.type = #{category}
			</if> 
			<if test="request_status != null and request_status != ''">
				and err.request_status = #{request_status}
			</if>
			<if test="search_text != null and search_text != '' ">
				and ut.name LIKE CONCAT('%', #{search_text}, '%')
			</if>
		</where>
		<if test="limit_cnt != null and limit_cnt != 0">
			limit #{limit_cnt} OFFSET #{startNumber}
		</if>
	</select>
	
	<select id="request_total_cnt" resultType="int">
			select count(*) as totalCnt from equipment_rental_request where 1=1
			<if test="request_status != null and request_status != ''">
	            AND request_status = #{request_status}
	        </if>
	</select>
	
	<select id="get_request_detail" resultType="map">
		SELECT 
		    err.idx,
		    err.id,
		    err.equipment_id,
		    err.user_id,
		    err.rental_start_date,
		    err.rental_end_date,
		    err.request_status,
		    date_format(err.request_date, '%Y-%m-%d') as request_date,
		    err.type,
		    err.equipment_plan,
		    err.sa_eob_no,
		    err.company_nm,
		    err.position,
		    err.company_address1,
		    err.company_address2,
		    err.file_path,
		    et.name,
		    et.type AS equipment_type,
		    ut.name AS user_name,
		    ut.mobile,
		    ut.birthday,
		    ut.email,
		    ut.address1 AS address1,
		    ut.address2 AS address2
		FROM 
		    equipment_rental_request err
		JOIN 
		    equipment_item_table eit ON err.equipment_id = eit.id
		JOIN 
		    equipment_type_table et ON eit.equipment_type_id = et.id
		JOIN 
		    user_table ut ON ut.user_id = err.user_id
		<where>
			<if test="idx != null and idx != 0">
				and err.idx = #{idx}
			</if> 
		</where>
		
	</select>
	
	<update id="update_request_status" parameterType="pictVO">
		UPDATE equipment_rental_request
		SET
			request_status = #{request_status}
			<if test="reject_msg != null and reject_msg != ''">
			, reject_msg = #{reject_msg}
			</if>
		WHERE idx = #{idx} 
	</update>
	
	<!-- QR코드 -->
	<select id="get_qr_code" parameterType="int" resultType="map">
	    SELECT 
	        eit.idx AS item_idx,
	        eit.id AS item_id,
	        eit.serial_number,
	        eit.status AS item_status,
	        eit.image_url AS item_image,
	        eit.text AS item_text,
	        
     	   	date_format(eit.reg_date, '%Y-%m-%d') as equipment_reg_date,
	        ett.id AS type_id,
	        ett.type,
	        ett.name AS equipment_name,
	        ett.description,
	        ett.image_url AS type_image,
	        ett.bujajae,
	        ett.use_ny,
	        
	        err.idx AS request_idx,
	        err.id AS rental_id,
	        err.user_id,
	        date_format(err.rental_start_date, '%Y-%m-%d') as rental_start_date,
	        date_format(err.rental_end_date, '%Y-%m-%d') as rental_end_date,
	        err.request_status,
	        date_format(err.request_date, '%Y-%m-%d') as request_date,
	        err.type AS rental_type,
	        err.equipment_plan,
	        err.sa_eob_no,
	        err.company_nm,
	        err.position,
	        err.company_address1,
	        err.company_address2,
	        err.file_path,
	        err.reject_msg,
	        
	        ut.name AS user_name,
	        ut.mobile AS user_mobile,
	        ut.email AS user_email,
	        ut.birthday AS user_birthday,
	        ut.address1 AS user_address1,
	        ut.address2 AS user_address2,
	        date_format(ut.reg_date, '%Y-%m-%d') as user_reg_date,
	        ut.company_nm AS user_company_nm,
	        ut.company_address1 AS user_company_address1,
	        ut.company_address2 AS user_company_address2,
	        ut.sa_eob_no AS user_sa_eob_no,
	        ut.position AS user_position,
	        ut.document_url AS user_document_url
	    FROM 
	        equipment_item_table eit
	    INNER JOIN 
	        equipment_type_table ett ON eit.equipment_type_id = ett.id
	    LEFT JOIN 
	        equipment_rental_request err ON eit.id = err.equipment_id
	        AND err.request_status IN ('approved', 'rental', 'overdue', 'returned')
	        AND (
	            CURDATE() BETWEEN err.rental_start_date AND err.rental_end_date
	            OR
	            err.rental_start_date >= CURDATE()
	        )
	    LEFT JOIN 
	        user_table ut ON err.user_id = ut.user_id
	    WHERE 
	        eit.idx = #{idx}
	    ORDER BY 
	        err.rental_start_date ASC
	</select>
	
	
	<!-- 시설물 관리 -->
	<select id="facility_list" resultType="pictVO">
	    SELECT * FROM (
	        SELECT 
	            et.idx,
	            et.id,
	            et.type,
	            et.name,
	            et.description,
	            et.image_url,
	            et.bujajae,
	            date_format(et.reg_date, '%Y-%m-%d') as reg_date,
	            et.use_ny,
	            COALESCE(avail_count.cnt, 0) AS avaliable_facility_cnt,
	            COALESCE(fit.status, 'available') as status,
	            CASE 
	                WHEN (bt.key_id IS NOT NULL AND bt.user_id = #{user_id}) THEN '1'
	                ELSE '0'
	            END AS isLike
	        FROM 
	            facility_type_table et
	        LEFT JOIN (
	            SELECT 
	                facility_type_id,
	                COUNT(*) AS cnt
	            FROM 
	                facility_item_table
	            WHERE 
	                status = 'available'
	            GROUP BY 
	                facility_type_id
	        ) avail_count ON et.id = avail_count.facility_type_id
	        LEFT JOIN facility_item_table fit ON et.id = fit.facility_type_id
	        LEFT JOIN bag_table bt ON et.id = bt.key_id 
	            <if test="user_id != null and user_id != ''">
	                AND bt.user_id = #{user_id}
	            </if>
	    ) AS subquery
	    <where>
	        use_ny = 'Y'
	        <if test="isOnlyAvailable != null and isOnlyAvailable">
	            AND avaliable_facility_cnt > 0
	        </if>
	        <if test="search_text != null and search_text != ''">
	            AND name LIKE CONCAT('%', #{search_text}, '%')
	        </if>
	        <if test="type != null and type != ''">
	            AND type LIKE CONCAT('%', #{type}, '%')
	        </if>
	    </where>
	    ORDER BY reg_date DESC
	    <if test="limit_cnt != null and limit_cnt != 0">
	        LIMIT #{limit_cnt} OFFSET #{startNumber}
	    </if>
	</select>

	<select id="facility_list_total_cnt" resultType="int">
			select count(*) as totalCnt from facility_type_table where use_ny = "Y"
	</select>
	
	<select id="facility_item_list" resultType="map">
	    SELECT 
	    ei.idx,
	    ei.id,
	    ei.facility_type_id,
	    ei.serial_number,
	    ei.status,
	    date_format(reg_date, '%Y-%m-%d') as reg_date
	     FROM facility_item_table as ei
        <where>
	        <if test="facility_id != null and facility_id != ''">
	            facility_type_id = #{facility_id}
	        </if>
	        <if test="isAll != true">
	            AND status = 'available'
	        </if>
	    </where>
	</select>
	
	
	
	
	<select id="facility_unavailable_date_list" resultType="map">
		<![CDATA[
		WITH RECURSIVE
		date_range AS (
		    SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY) AS date
		    UNION ALL
		    SELECT date + INTERVAL 1 DAY
		    FROM date_range
		    WHERE date < LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
		),
		facility_availability AS (
		    SELECT 
		        dr.date,
		        et.id AS facility_type_id,
		        COUNT(ei.id) AS total_count,
		        SUM(CASE WHEN ei.status = 'available' THEN 1 ELSE 0 END) -
		        COALESCE(SUM(CASE 
		            WHEN r.request_status IN ('approved', 'pendding') 
		            AND dr.date BETWEEN r.rental_start_date AND r.rental_end_date 
		            THEN 1 ELSE 0 END), 0) AS available_count
		    FROM date_range dr
		    CROSS JOIN facility_type_table et
		    JOIN facility_item_table ei ON et.id = ei.facility_type_id
		    LEFT JOIN facility_rental_request r ON ei.id = r.facility_id
		    WHERE et.id = #{id}
		    GROUP BY dr.date, et.id
		)
		SELECT 
		    DATE_FORMAT(date, '%Y-%m-%d') AS unavailable_date
		FROM facility_availability
		WHERE available_count = 0
		ORDER BY date
		]]>
	</select>
	
	
	<select id="facility_list_one" resultType="pictVO">
		select idx, id, type as category, name, description, image_url, bujajae, date_format(reg_date, '%Y-%m-%d') as reg_date from facility_type_table
        <where>
	        <if test="idx != 0 and id == null">
	            idx = #{idx}
	        </if>
	        <if test="idx == 0 and id != null and id != ''">
	            id = #{id}
	        </if>
	    </where>
	</select>
	
	<insert id="facility_insert" parameterType="pictVO">
	  <selectKey keyProperty="facility_id" resultType="string" order="BEFORE">
        	SELECT UUID() as facility_id
  	  </selectKey>
		    INSERT INTO facility_type_table
		    (id, type, name, description, image_url, bujajae)
		    VALUES (
		        #{facility_id}, #{category}, #{name}, #{description}, #{image_url}, #{bujajae}
		    );
		    
		    INSERT INTO facility_item_table
		    (facility_type_id, id)
		    VALUES (
		        #{facility_id}, UUID()
		    );
	</insert>
	
	<update id="facility_update" parameterType="pictVO">
	  UPDATE facility_type_table
	  SET 
	  	type = #{category},
	    name = #{name},
	    description = #{description},
	    bujajae = #{bujajae},
	    reg_date = NOW()
	    <if test="image_url != null and image_url != ''">
	      , image_url = #{image_url}
	    </if>
	  WHERE idx = #{idx}
	</update>
	<!-- 시설물 삭제 -->
	<update id="facility_delete" parameterType="int">
	  UPDATE facility_type_table
	  SET 
	    use_ny = "N"
	  WHERE idx = #{idx}
	</update>
	
	<!--  시리얼 넘버 생성  -->
	<insert id="facility_cnt_insert" parameterType="pictVO">
		INSERT INTO facility_item_table
			(facility_type_id, id, serial_number, image_url, text, reg_date)
		VALUES (
			 #{facility_id} , UUID(), #{serial_number}, #{image_url}, #{text}, #{reg_date}
			  )
	</insert>
	
	
	<select id="facility_item_one" resultType="pictVO">
		select 
			idx,
			id,
			facility_type_id,
			serial_number,
			status,
			date_format(reg_date, '%Y-%m-%d') as reg_date,
			image_url,
			text
		from facility_item_table
			
		where idx = #{idx}
	</select>
	
	<update id="facility_cnt_update" parameterType="pictVO">
	    UPDATE facility_item_table
	    <set>
	        <if test="serial_number != null">
	            serial_number = #{serial_number},
	        </if>
	        <if test="text != null">
	            text = #{text},
	        </if>
	        <if test="reg_date != null">
	            reg_date = #{reg_date},
	        </if>
	        <if test="status != null">
	            status = #{status}
	        </if>
	    </set>
	    <where>
	        <choose>
	            <when test="idx != null and idx != 0">
	                idx = #{idx}
	            </when>
	            <when test="id != null and id != ''">
	                id = #{id}
	            </when>
	            <otherwise>
	                1 = 2  <!-- 조건이 없는 경우 아무것도 업데이트되지 않도록 함 -->
	            </otherwise>
	        </choose>
	    </where>
	</update>
	
	<delete id="facility_cnt_delete" parameterType="int">
		delete from facility_item_table where idx = #{idx}
	</delete>
	
	<insert id="submit_facility_request" parameterType="pictVO">
		INSERT INTO facility_rental_request
			(id, facility_id, user_id, rental_start_date, rental_end_date, type, facility_plan, sa_eob_no, company_nm, position, company_address1, company_address2, file_path)
		VALUES (
			 UUID(), #{id}, #{user_id} , #{rental_start_date}, #{rental_end_date}, #{type}, #{facility_plan}, #{sa_eob_no}, #{company_nm}, #{position}, #{company_address1}, #{company_address2}, #{file_url1} 
			  )
	</insert>
	
	
	<update id="update_facility_item" parameterType="pictVO">
		update facility_item_table
		set status = 'applied'
		where id = '${id}'
	</update>
	
	<select id="get_facility_request_list" resultType="map">
		SELECT 
		    err.idx,
		    err.id,
		    err.facility_id,
		    err.user_id,
		    err.rental_start_date,
		    err.rental_end_date,
		    err.request_status,
		    date_format(err.request_date, '%Y-%m-%d') as request_date,
		    err.type,
		    err.facility_plan,
		    err.sa_eob_no,
		    err.company_nm,
		    err.position,
		    err.company_address1,
		    err.company_address2,
		    err.file_path,
		    et.name,
		    et.type AS facility_type,
		    ut.name AS user_name
		FROM 
		    facility_rental_request err
		JOIN 
		    facility_item_table eit ON err.facility_id = eit.id
		JOIN 
		    facility_type_table et ON eit.facility_type_id = et.id
		JOIN 
		    user_table ut ON ut.user_id = err.user_id
		<where>
			<if test="idx != null and idx != 0">
				and err.idx = #{idx}
				
			</if> 
			<if test="request_status != null and request_status != ''">
				and err.request_status = #{request_status}
			</if>
			<if test="search_text != null and search_text != '' ">
				and ut.name LIKE CONCAT('%', #{search_text}, '%')
			</if>
		</where>
		<if test="limit_cnt != null and limit_cnt != 0">
			limit #{limit_cnt} OFFSET #{startNumber}
		</if>
	</select>
	
	<select id="get_facility_request_detail" resultType="map">
		SELECT 
		    err.idx,
		    err.id,
		    err.facility_id,
		    err.user_id,
		    err.rental_start_date,
		    err.rental_end_date,
		    err.request_status,
		    date_format(err.request_date, '%Y-%m-%d') as request_date,
		    err.type,
		    err.facility_plan,
		    err.sa_eob_no,
		    err.company_nm,
		    err.position,
		    err.company_address1,
		    err.company_address2,
		    err.file_path,
		    et.name,
		    et.type AS facility_type,
		    ut.name AS user_name,
		    ut.mobile,
		    ut.birthday,
		    ut.email,
		    ut.address1 AS address1,
		    ut.address2 AS address2
		FROM 
		    facility_rental_request err
		JOIN 
		    facility_item_table eit ON err.facility_id = eit.id
		JOIN 
		    facility_type_table et ON eit.facility_type_id = et.id
		JOIN 
		    user_table ut ON ut.user_id = err.user_id
		<where>
			<if test="idx != null and idx != 0">
				and err.idx = #{idx}
			</if> 
		</where>
		
	</select>
	
	<update id="update_facility_request_status" parameterType="pictVO">
		UPDATE facility_rental_request
		SET
			request_status = #{request_status},
			reject_msg = #{reject_msg}
		WHERE idx = #{idx} 
	</update>
	
	
	<!-- 장바구니 -->
	<select id="isBag" resultType="int">
		select count(*) from bag_table where user_id = #{user_id} and key_id = #{key_id}
	</select>
	<insert id="add_bag" parameterType="pictVO">
		INSERT INTO bag_table
			(user_id, key_id, type)
		VALUES (
			 #{user_id}, #{key_id}, #{type} 
			  )
	</insert>
	

	<delete id="delete_bag" parameterType="pictVO">
		delete from bag_table where user_id = #{user_id} and key_id = #{key_id}
	</delete>
	
	
	<select id="getBagList" resultType="map">
	    SELECT 
	        bt.idx,
	        bt.user_id,
	        bt.key_id,
	        bt.type,
	        CASE 
	            WHEN bt.type = 'equipment' THEN et.name
	            ELSE ft.name
	        END AS name,
	        CASE 
	            WHEN bt.type = 'equipment' THEN et.type
	            ELSE ft.type
	        END AS category,
	        CASE 
	            WHEN bt.type = 'equipment' THEN et.id
	            ELSE ft.id
	        END AS id,
	        CASE 
	            WHEN bt.type = 'equipment' THEN et.description
	            ELSE ft.description
	        END AS description,
	        CASE 
	            WHEN bt.type = 'equipment' THEN et.image_url
	            ELSE ft.image_url
	        END AS image_url
	    FROM 
	        bag_table bt
	    LEFT JOIN equipment_type_table et ON (bt.type = 'equipment' AND bt.key_id = et.id)
	    LEFT JOIN facility_type_table ft ON (bt.type = 'facility' AND bt.key_id = ft.id)
	    <where>
	        bt.user_id = #{user_id}
	        <if test="type != null and type != ''">
	            AND bt.type = #{type}
	        </if>
	    </where>
	    ORDER BY bt.idx DESC
	</select>
	
	
	<!-- 교육신청 -->
	<insert id="request_education" parameterType="pictVO">
		INSERT INTO education_table
			(
			 id, user_Id, team, address1, address2, tel, position, mobile, email, type, cnt, visit_date, school, grade
			)
		VALUES (
			 UUID(), #{user_id}, #{team}, #{address1}, #{address2}, #{tel}, #{position}, #{mobile}, #{email}, #{type}, #{totalCnt}, #{visit_date}, #{school}, #{grade}
			  ) 
	</insert>
	
	<select id="get_education_list" resultType="map">
	    SELECT 
	        et.idx,
	        et.id,
	        et.user_id,
	        et.team,
	        et.address1,
	        et.address2,
	        et.tel,
	        et.position,
	        et.mobile,
	        et.email,
	        et.type,
	        et.cnt,
	        et.school,
	        et.grade,
	        date_format(et.visit_date, '%Y-%m-%d') as visit_date,
	        et.request_status,
	        date_format(et.reg_date, '%Y-%m-%d') as reg_date,
	        ut.name as user_name
	    FROM 
	        education_table et
	    LEFT JOIN 
	        user_table ut ON et.user_id = ut.user_id
	    WHERE 1=1
	    <if test="search_text != null and search_text != ''">
	        AND (
	            ut.name LIKE CONCAT('%', #{search_text}, '%') 
	        ) 
	    </if>
	    <if test="request_status != null and request_status != ''">
	        AND et.request_status = #{request_status}
	    </if>
	    ORDER BY et.idx DESC
	    <if test="limit_cnt != null and limit_cnt != 0">
	        LIMIT #{limit_cnt} OFFSET #{startNumber}
	    </if>
	</select>
	
	<select id="get_education_by_id" resultType="map">
		SELECT 
	        et.idx,
	        et.id,
	        et.user_id,
	        et.team,
	        et.address1,
	        et.address2,
	        et.tel,
	        et.position,
	        et.mobile,
	        et.email,
	        et.type,
	        et.cnt,
	        et.school,
	        et.grade,
	        date_format(et.visit_date, '%Y-%m-%d') as visit_date,
	        et.request_status,
	        date_format(et.reg_date, '%Y-%m-%d') as reg_date,
	        ut.name as user_name
	    FROM 
	        education_table et
	    LEFT JOIN 
	        user_table ut ON et.user_id = ut.user_id
	    WHERE et.id = #{id}
	</select>
	
	<update id="update_education" parameterType="pictVO">
		update education_table
		set `request_status` = #{request_status}
		where id = #{id}
	</update>
	
	
	
	<select id="pemtour_select" resultType="pictVO">
		select * from pemtour_table
	</select>
	
	<update id="pemtour_update" parameterType="pictVO">
		update pemtour_table
		set pemtour_url = #{pemtour_url},
		maintitle = #{maintitle}, title = #{title}, subtitle = #{subtitle}
	</update>
	
	
	<select id="event_list" resultType="pictVO">
		select idx, title, img_url, text, date_format(reg_date, '%Y-%m-%d') as reg_date, from_date, to_date, link_url, reg_date as rr_d from event_table
		<if test="search_text != null and search_text != '' ">
			where (
				title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		order by rr_d desc
	</select>
	
	<select id="event_list_one" resultType="pictVO">
		select * from event_table
		where idx = #{idx}
	</select>
	
	<insert id="event_insert" parameterType="pictVO">
		INSERT INTO event_table
			(
			 title, reg_date, use_at, img_url, text, link_url, from_date, to_date
			)
		VALUES (
			 #{title}, now(), 'Y', #{img_url}, #{text}, #{link_url}, #{from_date}, #{to_date}
			  ) 
	</insert>
	
	<update id="event_update" parameterType="pictVO">
		update event_table
		set title =#{title}, 
		reg_date = now(), 
		<if test="img_url != null and img_url != '' ">
			img_url = #{img_url}, 
		</if>
		text =#{text},
		link_url = #{link_url},
		from_date = #{from_date},
		to_date = #{to_date} 
		where idx = #{idx}
	</update>
	

	<delete id="event_delete" parameterType="pictVO">
		delete from event_table where idx = #{idx}
	</delete>
	
	<update id="event_file_delete" parameterType="pictVO">
		update event_table
		set img_url=NULL
		where idx = #{idx}
	</update>
	
	
	
	
	
	<!-- 영상로케이션 -->
	<select id="video_location_list" resultType="pictVO">
		select * from location_table 
		where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%') 
			) 
		</if>
		<if test="location_category != null and location_category != '' ">
			and location_category = #{location_category}
		</if>
		<if test="flag == null or flag == '' ">
			order by reg_date desc
			LIMIT #{limit_cnt} OFFSET #{startNumber}
		</if>
		
	</select>
	
	<select id="video_location_list_cnt" resultType="int">
		select count(idx) from location_table 
		where 1=1
		<if test="location_category != null and location_category != '' ">
			and location_category = #{location_category}
		</if>
		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%') 
			) 
		</if>
	</select>
	
	<select id="video_location_list_one" resultType="pictVO">
		select * from location_table 
		where 1=1
		and idx = #{idx}
		
	</select>
	
	<insert id="location_apply_save" parameterType="pictVO">
		INSERT INTO location_apply_table
			(
			 location_id, start_date, end_date, name, tel, email, company, depart, category, title, file_url, reg_date
			)
		VALUES (
			 #{idx}, #{start_date}, #{end_date}, #{name}, #{tel}, #{email}, #{company}, #{depart}, #{category}, #{title}, #{file_url}, now()
			  ) 
	</insert>
	
	
	
	<!-- 산업체리스트 -->
	<select id="industry_list" resultType="pictVO">
		select * from industry_table 
		where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%') 
			) 
		</if>
		
		<if test="
			(scale1 != null and scale1 != '') or (scale2 != null and scale2 != '' ) or (scale3 != null and scale3 != '')
			or (main_subject1 != null and main_subject1 != '') or (main_subject2 != null and main_subject2 != '' ) or (main_subject3 != null and main_subject3 != '')
			or (main_subject4 != null and main_subject4 != '') or (main_subject5 != null and main_subject5 != '' ) or (main_subject6 != null and main_subject6 != '')
			or (certificate_category1 != null and certificate_category1 != '') or (certificate_category2 != null and certificate_category2 != '' ) or (certificate_category3 != null and certificate_category3 != '')
			or (certificate_category4 != null and certificate_category4 != '') or (certificate_category5 != null and certificate_category5 != '' ) or (certificate_category6 != null and certificate_category6 != '')
		
		">
			and (
				0=1
			<if test="scale1 != null and scale1 != '' ">
				or scale LIKE CONCAT('%', #{scale1}, '%')
			</if>
			<if test="scale2 != null and scale2 != '' ">
				or scale LIKE CONCAT('%', #{scale2}, '%')
			</if>
			<if test="scale3 != null and scale3 != '' ">
				or scale LIKE CONCAT('%', #{scale3}, '%')
			</if>
			
			<if test="main_subject1 != null and main_subject1 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject1}, '%')
			</if>
			<if test="main_subject2 != null and main_subject2 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject2}, '%')
			</if>
			<if test="main_subject3 != null and main_subject3 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject3}, '%')
			</if>
			<if test="main_subject4 != null and main_subject4 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject4}, '%')
			</if>
			<if test="main_subject5 != null and main_subject5 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject5}, '%')
			</if>
			<if test="main_subject6 != null and main_subject6 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject6}, '%')
			</if>
			
			<if test="certificate_category1 != null and certificate_category1 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category1}, '%')
			</if>
			<if test="certificate_category2 != null and certificate_category2 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category2}, '%')
			</if>
			<if test="certificate_category3 != null and certificate_category3 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category3}, '%')
			</if>
			<if test="certificate_category4 != null and certificate_category4 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category4}, '%')
			</if>
			<if test="certificate_category5 != null and certificate_category5 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category5}, '%')
			</if>
			<if test="certificate_category6 != null and certificate_category6 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category6}, '%')
			</if>
			
		)
		</if>
		order by reg_date desc
		LIMIT #{limit_cnt} OFFSET #{startNumber}
	</select>
	
	<select id="industry_list_cnt" resultType="int">
		select count(idx) from industry_table 
		where 1=1

		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%') 
			) 
		</if>
		<if test="
			(scale1 != null and scale1 != '') or (scale2 != null and scale2 != '' ) or (scale3 != null and scale3 != '')
			or (main_subject1 != null and main_subject1 != '') or (main_subject2 != null and main_subject2 != '' ) or (main_subject3 != null and main_subject3 != '')
			or (main_subject4 != null and main_subject4 != '') or (main_subject5 != null and main_subject5 != '' ) or (main_subject6 != null and main_subject6 != '')
			or (certificate_category1 != null and certificate_category1 != '') or (certificate_category2 != null and certificate_category2 != '' ) or (certificate_category3 != null and certificate_category3 != '')
			or (certificate_category4 != null and certificate_category4 != '') or (certificate_category5 != null and certificate_category5 != '' ) or (certificate_category6 != null and certificate_category6 != '')
		
		">
			and (
				0=1
			<if test="scale1 != null and scale1 != '' ">
				or scale LIKE CONCAT('%', #{scale1}, '%')
			</if>
			<if test="scale2 != null and scale2 != '' ">
				or scale LIKE CONCAT('%', #{scale2}, '%')
			</if>
			<if test="scale3 != null and scale3 != '' ">
				or scale LIKE CONCAT('%', #{scale3}, '%')
			</if>
			
			<if test="main_subject1 != null and main_subject1 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject1}, '%')
			</if>
			<if test="main_subject2 != null and main_subject2 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject2}, '%')
			</if>
			<if test="main_subject3 != null and main_subject3 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject3}, '%')
			</if>
			<if test="main_subject4 != null and main_subject4 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject4}, '%')
			</if>
			<if test="main_subject5 != null and main_subject5 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject5}, '%')
			</if>
			<if test="main_subject6 != null and main_subject6 != '' ">
				or main_subject LIKE CONCAT('%', #{main_subject6}, '%')
			</if>
			
			<if test="certificate_category1 != null and certificate_category1 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category1}, '%')
			</if>
			<if test="certificate_category2 != null and certificate_category2 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category2}, '%')
			</if>
			<if test="certificate_category3 != null and certificate_category3 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category3}, '%')
			</if>
			<if test="certificate_category4 != null and certificate_category4 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category4}, '%')
			</if>
			<if test="certificate_category5 != null and certificate_category5 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category5}, '%')
			</if>
			<if test="certificate_category6 != null and certificate_category6 != '' ">
				or certificate_category LIKE CONCAT('%', #{certificate_category6}, '%')
			</if>
			
		)
		</if>
	</select>
	
	<select id="industry_list_one" resultType="pictVO">
		select * from industry_table where idx = #{idx}
	
	</select>
	<select id="portfolio_list" resultType="pictVO">
		select * from portfolio_table where industry_id = #{idx}
	</select>
	
	<select id="movie_list" resultType="pictVO">
		select * from movie_table where location_id = #{idx}
	</select>
</mapper>